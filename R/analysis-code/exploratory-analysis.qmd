---
title: "Assessing of the relationship between Alcohol consumption and Latent TB in Kampala, Uganda"
author: "Patrick Kaggwa"
date: "23/02/2024"
output: html_document
---

## Data cleaning and exploring.

```{r seed=123}
#load needed packages. make sure they are installed.
#Loading the libraries I might need 
defaultW <- getOption("warn") 
options(warn = -1) 
suppressMessages(library(here))#for data loading/saving
suppressMessages(library(skimr))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(tidyverse))
suppressMessages(library(Hmisc))
suppressMessages(library(DescTools))
suppressMessages(library(table1))
suppressMessages(library(ggplot2))
suppressMessages(library(data.table))
suppressMessages(library(haven))
suppressMessages(library(ggpubr))
suppressMessages(library(psych))
suppressMessages(library(mosaic))
suppressMessages(library(survival))
suppressMessages(library(survminer))
suppressMessages(library(readxl))
suppressMessages(library(readr))
suppressMessages(library(flextable))
options(warn = defaultW)

```

## Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","raw-data","data_patrick.xlsx")
data_location1 <- here::here("data","raw-data","TST_Placement.csv")
#load data
# Loading the needed datasets
madaproject <- read_excel(data_location)

tst <- read_csv(data_location1)
```

## Data cleaning & manipulation

```{r}
# First, remove duplicates from the tst dataset based on the participant ID then also merge the variable HIV status
tst_unique <- tst %>%
  distinct(participantid, .keep_all = TRUE) %>%
  select(participantid, tst2b)

# Now merge the madaproject dataset with tst_unique based on participant ID
merged_data <- left_join(madaproject, tst_unique, by = "participantid")
dim(merged_data)
head(merged_data)
```

```{r}
# Select specific variable of interest and create final dataset for analysis
finaldata <- merged_data %>%
  select(sex, inc, age_yrs, Drinkst1tus, tst2b, enr_compdate, last_date)
```

Now I will review the final dataset

```{r}
head(finaldata)
colnames(finaldata)
```

Now I will rename variables in the data and create new variables

```{r}
# Rename columns in finaldata based on the provided vector of new names
finaldata <- finaldata %>%
  rename(
    ltbi = inc,
    age = age_yrs,
    alcohol_consumption = Drinkst1tus,
    hiv_status = tst2b,
    enrollment_date = enr_compdate,
    conversion_date = last_date
  )
colnames(finaldata)
```

Now I will check for missingness in the data

Now I will check for the class of all the variables

```{r}
class(finaldata$age)
class(finaldata$sex)
class(finaldata$ltbi)
class(finaldata$alcohol_consumption)
class(finaldata$hiv_status)
class(finaldata$enrollment_date)
class(finaldata$conversion_date)
```

Now I will set variable to the right class

```{r}
# Convert age to numeric
finaldata$age <- as.numeric(finaldata$age)

# Convert sex, ltbi, alcohol_consumption, and hiv_status to factors
finaldata$sex <- as.factor(finaldata$sex)
finaldata$ltbi <- as.factor(finaldata$ltbi)
finaldata$alcohol_consumption <- as.factor(finaldata$alcohol_consumption)
finaldata$hiv_status <- as.factor(finaldata$hiv_status)

# Convert enrollment_date and conversion_date to dates
finaldata$enrollment_date <- as.Date(finaldata$enrollment_date, format = "%Y-%m-%d")
finaldata$conversion_date <- as.Date(finaldata$conversion_date, format = "%Y-%m-%d")

```

```{r}
# I will look again at the class to see if they are as defined.
class(finaldata$age)
class(finaldata$sex)
class(finaldata$ltbi)
class(finaldata$alcohol_consumption)
class(finaldata$hiv_status)
class(finaldata$enrollment_date)
class(finaldata$conversion_date)
```

## Data exploration through tables

Showing a bit of code to produce and save a summary table.

```{r}
summary_df = skimr::skim(finaldata)
print(summary_df)
# save to file
summarytable_file = here("results", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```


## Data exploration through figures

```{r}
 library(dplyr)

# Compute summaries of the age variable in the finaldata dataset

age_summary <- summarise(finaldata,  # Use the summarise() function from dplyr
                mean_age = mean(age, na.rm = TRUE),  # Compute the mean age
                median_age = median(age, na.rm = TRUE),  # Compute the median age
                min_age = min(age, na.rm = TRUE),  # Find the minimum age
                max_age = max(age, na.rm = TRUE),  # Find the maximum age
                sd_age = sd(age, na.rm = TRUE))  # Calculate the standard deviation of age
age_summary

 
```
Now I will save age summary in the table 

```{r}

```


```{r}
p1 <- finaldata %>% ggplot(aes(x=age)) + geom_histogram() 
plot(p1)
figure_file = here("results","age_distribution.png")
ggsave(filename = figure_file, plot=p1) 
```

```{r}
# Bar plot for Sex
p2 <- finaldata %>% ggplot(aes(x=sex)) + geom_bar() 
plot(p2)
figure_file = here("results","sex_distribution.png")
ggsave(filename = figure_file, plot=p2) 

# Bar plot for TB Infection
p3 <- finaldata %>% ggplot(aes(x=ltbi)) + geom_bar() 
plot(p3)
figure_file = here("results","ltbi_distribution.png")
ggsave(filename = figure_file, plot=p3)

# Bar plot for alcohol consumption
p4 <- finaldata %>% ggplot(aes(x=alcohol_consumption)) + geom_bar() 
plot(p4)
figure_file = here("results","alcohol consumption_distribution.png")
ggsave(filename = figure_file, plot=p4)


```

```{r}
# Box plot between age and ltbi
p5 <- finaldata %>% ggplot(aes(x=ltbi, y=age)) + geom_boxplot(fill = "skyblue")
plot(p5)
figure_file = here("results","ltbi_age.png")
ggsave(filename = figure_file, plot=p5) 
```

```{r}
# Stacked bar plot between ltbi and alcohol_consumption

p6 <- finaldata %>% ggplot(aes(x=alcohol_consumption, fill = ltbi)) + geom_bar(position = "stack") 
plot(p6)
figure_file = here("results","alcohol consumption_ltbi_stacked.png")
ggsave(filename = figure_file, plot=p6) 
```

Creating categorical value of age

```{r}
#Creating age categories
finaldata <- finaldata %>% mutate(agecat = ifelse(age >= 0 & age <= 20, 0, 
                                                  ifelse( age> 20 & age <= 40, 1, 
                                                    ifelse(age > 40 , 2, 
                                                    ifelse(age > 60, 3, NA))))) 
```

```{r}
# Create the  crosstabulation
tb1 <- table(finaldata$sex, finaldata$ltbi)
tb2 <- table(finaldata$agecat, finaldata$ltbi)
tb3 <- table(finaldata$alcohol_consumption, finaldata$ltbi)
tb4 <- table(finaldata$hiv_status, finaldata$ltbi)
tb1 
tb2 
tb3 
tb4
 
```
